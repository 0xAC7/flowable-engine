<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.flowable.engine.impl.persistence.entity.ProcessMigrationBatchEntityImpl">

    <resultMap id="processMigrationBatchResultMap" type="org.flowable.engine.impl.persistence.entity.ProcessMigrationBatchEntityImpl">
        <id property="id" column="ID_" jdbcType="VARCHAR"/>
        <result property="revision" column="REV_" jdbcType="INTEGER"/>
        <result property="batchType" column="TYPE_" jdbcType="VARCHAR"/>
        <result property="sourceProcessDefinitionId" column="SOURCE_PROC_DEF_ID_" jdbcType="VARCHAR"/>
        <result property="targetProcessDefinitionId" column="TARGET_PROC_DEF_ID_" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
        <result property="migrationDocRefId" column="MIGRATION_DOC_BYTEARRAY_ID_" typeHandler="ByteArrayRefTypeHandler"/>
        <collection property="batchChildren" ofType="org.flowable.engine.impl.persistence.entity.ProcessMigrationBatchPartEntityImpl" column="ID_" select="selectProcessMigrationBatchParts"/>
    </resultMap>

    <!-- ProcessMigrationBatch INSERTS -->
    <insert id="insertProcessMigrationBatch" parameterType="org.flowable.engine.impl.persistence.entity.ProcessMigrationBatchEntityImpl">
        INSERT INTO ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH(ID_, REV_, TYPE_, SOURCE_PROC_DEF_ID_, TARGET_PROC_DEF_ID_, CREATE_TIME_, MIGRATION_DOC_BYTEARRAY_ID_)
        VALUES (#{id, jdbcType=VARCHAR},
                #{revision, jdbcType=INTEGER},
                #{batchType, jdbcType=VARCHAR},
                #{sourceProcessDefinitionId, jdbcType=VARCHAR},
                #{targetProcessDefinitionId, jdbcType=VARCHAR},
                #{createTime, jdbcType=TIMESTAMP},
                #{migrationDocRefId, typeHandler=ByteArrayRefTypeHandler})
    </insert>

    <insert id="bulkInsertProcessMigrationBatch" parameterType="java.util.List">
        INSERT INTO ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH(ID_, REV_, TYPE_, SOURCE_PROC_DEF_ID_, TARGET_PROC_DEF_ID_, CREATE_TIME_, MIGRATION_DOC_BYTEARRAY_ID_)
        VALUES
        <foreach collection="list" item="processMigrationBatch" index="index" separator=",">
            (#{processMigrationBatch.id, jdbcType=VARCHAR},
            #{processMigrationBatch.revision, jdbcType=INTEGER},
            #{processMigrationBatch.batchType, jdbcType=VARCHAR},
            #{processMigrationBatch.sourceProcessDefinitionId, jdbcType=VARCHAR},
            #{processMigrationBatch.targetProcessDefinitionId, jdbcType=VARCHAR},
            #{processMigrationBatch.createTime, jdbcType=TIMESTAMP},
            #{processMigrationBatch.migrationDocRefId, typeHandler=ByteArrayRefTypeHandler})
        </foreach>
    </insert>

    <insert id="bulkInsertProcessMigrationBatch" databaseId="oracle" parameterType="java.util.List">
        INSERT ALL
        <foreach collection="list" item="processMigrationBatch" index="index">
            INTO ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH(ID_, REV_, TYPE_, SOURCE_PROC_DEF_ID_, TARGET_PROC_DEF_ID_, CREATE_TIME_, MIGRATION_DOC_BYTEARRAY_ID_) VALUES
            (#{processMigrationBatch.id, jdbcType=VARCHAR},
            #{processMigrationBatch.revision, jdbcType=INTEGER},
            #{processMigrationBatch.batchType, jdbcType=VARCHAR},
            #{processMigrationBatch.sourceProcessDefinitionId, jdbcType=VARCHAR},
            #{processMigrationBatch.targetProcessDefinitionId, jdbcType=VARCHAR},
            #{processMigrationBatch.createTime, jdbcType=TIMESTAMP},
            #{processMigrationBatch.migrationDocRefId, typeHandler=ByteArrayRefTypeHandler})
        </foreach>
        SELECT * FROM dual
    </insert>

    <!-- ProcessMigrationBatch DELETE -->
    <delete id="deleteProcessMigrationBatch" parameterType="string">
        delete
        from ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH
        where ID_ = #{id, jdbcType=VARCHAR}
    </delete>

    <!-- ProcessMigrationBatch SELECT -->
    <select id="selectProcessMigrationBatch" parameterType="string" resultMap="processMigrationBatchResultMap">
        select *
        from ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH
        where ID_ = #{id, jdbcType=VARCHAR}
    </select>

    <select id="selectProcessMigrationBatchParts" parameterType="string" resultMap="org.flowable.engine.impl.persistence.entity.ProcessMigrationBatchPartEntityImpl.processMigrationBatchPartMap">
        select *
        from ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH_PART
        where PARENT_BATCH_ID_ = #{id, jdbcType=VARCHAR}
    </select>


    <!--<select id="selectMigrationValidationBatchesByParentBatchId" parameterType="org.flowable.common.engine.impl.db.ListQueryParameterObject" resultMap="processMigrationBatchResultMap">-->
    <!--select * from ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH where (TYPE_ = 'processMigration') and (ID_ = #{parentBatchId} or PARENT_BATCH_ID_ = #{parentBatchId})-->
    <!--</select>-->

    <!--<select id="selectMigrationBatchesByParentBatchId" parameterType="org.flowable.common.engine.impl.db.ListQueryParameterObject" resultMap="processMigrationBatchResultMap">-->
    <!--select * from ${prefix}ACT_RU_PROCESS_MIGRATION_BATCH where (TYPE_ = 'processMigrationValidation') and (ID_ = #{parentBatchId} or PARENT_BATCH_ID_ = #{parentBatchId})-->
    <!--</select>-->


</mapper>